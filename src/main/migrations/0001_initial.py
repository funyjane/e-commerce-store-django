# Generated by Django 3.2.5 on 2021-08-02 14:37

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AbstractBaseListing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('price', models.PositiveIntegerField(default=1)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('edited_at', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('slug', models.SlugField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Seller',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth.user')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('abstractbaselisting_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.abstractbaselisting')),
                ('brand_name', models.CharField(max_length=100)),
            ],
            bases=('main.abstractbaselisting',),
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('abstractbaselisting_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.abstractbaselisting')),
                ('used', models.BooleanField(default=True)),
            ],
            bases=('main.abstractbaselisting',),
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('abstractbaselisting_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.abstractbaselisting')),
                ('type_of', models.CharField(max_length=100)),
            ],
            bases=('main.abstractbaselisting',),
        ),
        migrations.AddField(
            model_name='abstractbaselisting',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='listing', to='main.category'),
        ),
        migrations.AddField(
            model_name='abstractbaselisting',
            name='seller',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='listing', to='main.seller'),
        ),
        migrations.AddField(
            model_name='abstractbaselisting',
            name='tags',
            field=models.ManyToManyField(related_name='listing', to='main.Tag'),
        ),
        migrations.CreateModel(
            name='ArchiveListing',
            fields=[
            ],
            options={
                'ordering': ['created_at'],
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('main.abstractbaselisting',),
        ),
    ]
